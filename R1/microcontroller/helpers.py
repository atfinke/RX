gamma_with_max_65535 = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 254, 509, 509, 509, 509, 509, 509, 509, 509, 764, 764, 764, 764, 764, 764, 764, 1019, 1019, 1019, 1019, 1019, 1274, 1274, 1274, 1274, 1529, 1529, 1529, 1529, 1784, 1784, 1784, 1784, 2039, 2039, 2039, 2294, 2294, 2294, 2549, 2549, 2549, 2803, 2803, 2803, 3058, 3058, 3313, 3313, 3313, 3568, 3568, 3823, 3823, 4078, 4078, 4333, 4333, 4588, 4588, 4843, 4843, 5098, 5098, 5352, 5352, 5607, 5607, 5862, 6117, 6117, 6372, 6372, 6627, 6882, 6882, 7137, 7392, 7392, 7647, 7901, 8156, 8156, 8411, 8666, 8921, 8921, 9176, 9431, 9686, 9941, 9941, 10196, 10450, 10705, 10960, 11215, 11470, 11725, 11980, 12235, 12490, 12745, 12745, 13000, 13254, 13764, 14019, 14274, 14529, 14784, 15039, 15294, 15549, 15803, 16058, 16313, 16823, 17078, 17333, 17588, 17843, 18352, 18607, 18862, 19117, 19627, 19882, 20137, 20647, 20901, 21156, 21666, 21921, 22176, 22686, 22941, 23450, 23705, 24215, 24470, 24980, 25235, 25745, 26000, 26509, 26764, 27274, 27784, 28039, 28549, 29058, 29313, 29823, 30333, 30588, 31098, 31607, 32117, 32372, 32882, 33392, 33901, 34411, 34921, 35176, 35686, 36196, 36705, 37215, 37725, 38235, 38745, 39254, 39764, 40274, 40784, 41294, 41803, 42568, 43078, 43588, 44098, 44607, 45117, 45882, 46392, 46901, 47411, 48176, 48686, 49196, 49960, 50470, 50980, 51745, 52254, 53019, 53529, 54294, 54803, 55568, 56078, 56843, 57352, 58117, 58882, 59392, 60156, 60921, 61431, 62196, 62960, 63470, 64235, 65000]

from device_config import DeviceConfig

def num_tuple_array_from_buffer(buffer, offset, light_count):
    current = []
    for index in range(light_count):
        current.append(buffer[offset + index])
    return current


def white_tuple_array(light_count):
    current = []
    for index in range(light_count):
        current.append((DeviceConfig.MAX_LED_VALUE, DeviceConfig.MAX_LED_VALUE, DeviceConfig.MAX_LED_VALUE))
    return current

def lerp_tuple_arrays(inital, final, progress):
    current = []
    for index in range(len(inital)):
        lerped = [int(x + (y - x) * progress) for x, y in zip(inital[index], final[index])]
        current.append(lerped)
    return current

def hex_to_rgb(hex):
    r = gamma_with_max_65535[int(hex[0:2], 16)]
    g = gamma_with_max_65535[int(hex[2:4], 16)]
    b = gamma_with_max_65535[int(hex[4:6], 16)]
    return (r, g, b)